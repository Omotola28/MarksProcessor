#BlueJ class context
comment0.params=
comment0.target=MarksProcessor()
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ MarksProcessor\r\n\ \r\n\ @nameOfCohort\ saves\ the\ name\ of\ cohort\ from\ file\ read\ \r\n\ @noOfMarks\ saves\ the\ number\ of\ marks\ the\ students\ have\ based\ on\ file\ read\r\n\ @marksList\ is\ an\ ArrayList\ variable\ that\ stores\ the\ StudentRecord\ objects\r\n
comment1.params=
comment1.target=java.lang.String\ getNameOfCohort()
comment1.text=\r\n\ Accessor\ methods\ for\ the\ class\ MarksProcessor\r\n
comment2.params=
comment2.target=java.util.ArrayList\ getRecords()
comment3.params=stuRecord
comment3.target=void\ storeRecords(StudentRecord)
comment3.text=\r\n\ Adds\ student\ Records\ to\ the\ MarksProcessor\r\n\r\n\ @param\ \ \ <code>stuRecord</code>\ an\ <code>StudentRecord</code>\ object,\ the\ records\ to\ be\ added\r\n
comment4.params=fileName
comment4.target=void\ readMarksData(java.lang.String)
comment4.text=\r\n\ Reads\ marks\ data\ from\ a\ file\ and\ adds\ corresponding\ marks\ to\ the\ MarksProcessor\r\n\r\n\ @param\ \ \ <code>fileName</code>\ a\ <code>String</code>,\ the\ name\ of\ the\ \r\n\ \ \ \ \ \ \ \ \ \ text\ file\ in\ which\ the\ data\ is\ stored.\r\n\ \r\n\ @throws\ \ FileNotFoundException\r\n
comment5.params=
comment5.target=void\ displayResults()
comment5.text=\r\n\ Displays\ students\ names\ and\ marks\ and\ average\ to\ the\ terminal\ window\r\n\ \r\n\ @param\ listPosition\ used\ to\ prevents\ list\ of\ students\ to\ be\ displayed\ using\ the\ zero\ based\ indexing\r\n\ @param\ average\ stores\ the\ average\ value\ of\ sumed\ marks\r\n
comment6.params=fileName
comment6.target=void\ writeMarksData(java.lang.String)
comment6.text=\r\n\ Writes\ marks\ data\ to\ a\ new\ file\r\n\r\n\ @param\ \ \ <code>fileName</code>\ a\ <code>String</code>,\ the\ name\ of\ the\ \r\n\ \ \ \ \ \ \ \ \ \ text\ file\ in\ which\ the\ data\ is\ written\ to.\r\n\ \r\n\ @throws\ \ FileNotFoundException\r\n
comment7.params=
comment7.target=void\ clearMarksData()
comment7.text=\r\n\ Emptys\ stored\ data\ in\ MarksProcessor\ \r\n\ \r\n\ @param\ trimToSize()\ resets\ the\ size\ of\ the\ ArrayList\r\n\ @isEmpty()\ checks\ if\ arrayList\ is\ empty\r\n
comment8.params=studentPosn\ marksPosn\ newMark
comment8.target=void\ editMarksData(int,\ int,\ int)
comment8.text=\r\n\ Modify\ the\ data\ stored\ in\ the\ MarksProcessor\r\n\ \r\n\ @param\ studentPosn\ for\ accessing\ the\ students\ based\ on\ position\ in\ the\ ArrayList\r\n\ \ \ \ \ \ \ \ marksPosn\ for\ position\ of\ marks\ that\ user\ wants\ to\ modify\r\n\ \ \ \ \ \ \ \ newMark\ input\ value\ for\ updated\ mark\r\n
numComments=9
